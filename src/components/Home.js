import React, { useState } from "react";
import Loading from "./Loading";

const Home = () => {
    const [fullName, setFullName] = useState('');
    const [currentPosition, setCurrentPosition] = useState('');
    const [currentLength, setCurrentLength] = useState(1);
    const [companyInfo, setCompanyInfo] = useState([{ name: "", position: "" }]);
    const [currentTechnologies, setCurrentTechnologies] = useState('');
    const [headshot, setHeadshot] = useState(null);
    const [loading, setLoading] = useState(false);

    const handleFormSubmit = (e) => {
        e.preventDefault();
        console.log({
            fullName,
            currentPosition,
            currentLength,
            currentTechnologies,
            headshot,
            loading
        });
        setLoading(true);
    };

    //üëáüèª updates the state with user's input
    const handleAddCompany = () =>
        setCompanyInfo([...companyInfo, { name: "", position: "" }]);

//üëáüèª removes a selected item from the list
    const handleRemoveCompany = (index) => {
        const list = [...companyInfo];
        list.splice(index, 1);
        setCompanyInfo(list);
    };
//üëáüèª updates an item within the list
    const handleUpdateCompany = (e, index) => {
        const { name, value } = e.target;
        const list = [...companyInfo];
        list[index][name] = value;
        setCompanyInfo(list);
    };


    if (loading) {
        return <Loading />;
    }

    return (
        <div className='app'>
            <h1>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –†–µ–∑—é–º–µ</h1>
            <p>–°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑—é–º–µ —Å –ø–æ–º–æ—â—å—é ChatGPT –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</p>
            <form
                onSubmit={handleFormSubmit}
                method='POST'
                encType='multipart/form-data'
            >
                <label htmlFor='fullName'>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è</label>
                <input
                    type='text'
                    required
                    name='fullName'
                    id='fullName'
                    value={fullName}
                    onChange={(e) => setFullName(e.target.value)}
                />
                <div className='nestedContainer'>
                    <div>
                        <label htmlFor='currentPosition'>–¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã</label>
                        <input
                            type='text'
                            required
                            name='currentPosition'
                            className='currentPosition'
                            value={currentPosition}
                            onChange={(e) => setCurrentPosition(e.target.value)}
                        />
                    </div>
                    <div>
                        <label htmlFor='currentLength'>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã</label>
                        <input
                            type='number'
                            required
                            name='currentLength'
                            className='currentInput'
                            value={currentLength}
                            onChange={(e) => setCurrentLength(e.target.value)}
                        />
                    </div>
                    <div>
                        <label htmlFor='currentTechnologies'>–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</label>
                        <input
                            type='text'
                            required
                            name='currentTechnologies'
                            className='currentTechnologies'
                            value={currentTechnologies}
                            onChange={(e) => setCurrentTechnologies(e.target.value)}
                        />
                    </div>
                </div>
                <label>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ</label>
                <input
                    type='file'
                    name='photo'
                    required
                    id='photo'
                    accept='image/x-png, image/jpeg'
                    onChange={(e) => setHeadshot(e.target.files[0])}
                />

                <h3>–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã</h3>
                {companyInfo.map((company, index) => (
                    <div className='nestedContainer' key={index}>
                        <div className='companies'>
                            <label htmlFor='name'>–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã</label>
                            <input
                                type='text'
                                name='name'
                                required
                                onChange={(e) => handleUpdateCompany(e, index)}
                            />
                        </div>
                        <div className='companies'>
                            <label htmlFor='position'>–ó–∞–Ω–∏–º–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å</label>
                            <input
                                type='text'
                                name='position'
                                required
                                onChange={(e) => handleUpdateCompany(e, index)}
                            />
                        </div>

                        <div className='btn__group'>
                            {companyInfo.length - 1 === index && companyInfo.length < 4 && (
                                <button id='addBtn' onClick={handleAddCompany}>
                                    –î–æ–±–∞–≤–∏—Ç—å
                                </button>
                            )}
                            {companyInfo.length > 1 && (
                                <button id='deleteBtn' onClick={() => handleRemoveCompany(index)}>
                                    –£–¥–∞–ª–∏—Ç—å
                                </button>
                            )}
                        </div>
                    </div>
                ))}

                <button>–°–û–ó–î–ê–¢–¨ –†–ï–ó–Æ–ú–ï</button>
            </form>
        </div>
    );
};

export default Home;
